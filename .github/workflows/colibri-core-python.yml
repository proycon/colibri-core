name: Python CI

on:
  push:
    branches:
      - master
      - develop

    paths:
      - 'src/**'
      - 'include/**'
      - '*.py'
      - '*.pyx'
      - '*.pxd'
      - '.github/workflows/**'

jobs:

  notification:
    runs-on: ubuntu-latest
    name: Notify start to gitlama
    steps:
      - name: IRC notification
        uses: LanguageMachines/ticcactions/irc-init@v1
        with:
          nickname: GitHubPy
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  build:
    needs: notification
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++]

    steps:
      - uses: actions/checkout@v4.1.1
      - name: Install Build Environment
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install pkg-config autoconf-archive
             fi

      - name: Install Dependencies
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install python3 cython3 python3-pip python3-wheel libbz2-dev
             fi
      - uses: LanguageMachines/ticcactions/irc-nick@v1

      - uses: LanguageMachines/ticcactions/cpp-safe-build@v1

      - name: Build and install Colibri-Core python binding
        id: python
        env:
          CXX: ${{ matrix.compiler }}
        run: |
          pip install .

      - name: get build status
        uses: LanguageMachines/ticcactions/get-status@v1
        with:
          the-step: python
          outcome: ${{ steps.python.outcome }}

      - name: Test
        id: test_py
        if: ${{ env.action_status == '' }}
        env:
          CXX: ${{ matrix.compiler }}
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib python test.py
        continue-on-error: true
      - name: get Test status
        uses: LanguageMachines/ticcactions/get-status@v1
        with:
          the-step: test_py
          outcome: ${{ steps.test_py.outcome }}

      - name: Test patternmodeller
        id: modeller
        if: ${{ env.action_status == '' }}
        env:
          CXX: ${{ matrix.compiler }}
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib cd exp && ./colibri-patternmodeller-test.sh
        continue-on-error: true
      - name: get modeller status
        uses: LanguageMachines/ticcactions/get-status@v1
        with:
          the-step: modeller
          outcome: ${{ steps.modeller.outcome }}

      - name: Notify IRC of end result
        uses: LanguageMachines/ticcactions/irc-status@v1
        with:
          branch: ${{ github.ref_name }}
          nickname: ${{ env.nick }}
          step: testing
          status: ${{ env.action_status }}
          details: ${{ env.action_details }}
